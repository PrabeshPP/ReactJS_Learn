{"ast":null,"code":"import { showCartActions } from \"./UI\";\nimport { cartSliceAction } from \"./cart-slice\";\nexport const fetchData = () => {\n  return async () => {\n    const fetchCart = async () => {\n      const response = await fetch(\"https://foodapp-c413b-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Response(\"unable to fetch the data!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const data = await fetchCart();\n      dispatch(cartSliceAction.replaceCart(data));\n    } catch (err) {\n      dispatch(showCartActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching Cart Data Failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(showCartActions.showNotification({\n      status: \"Pending\",\n      title: \"Sending...\",\n      message: \"Sending Cart Data\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://foodapp-c413b-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart Data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(showCartActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent Cart Data Successfully!\"\n      }));\n    } catch (error) {\n      dispatch(showCartActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Could not Sent Cart Data Successfully!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/prabe/OneDrive/Desktop/ReactJS/reactJS_intro/Redux/redux_advanced/src/Store/cart-actions.js"],"names":["showCartActions","cartSliceAction","fetchData","fetchCart","response","fetch","ok","Response","data","json","dispatch","replaceCart","err","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","Error","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,MAAMC,SAAS,GAAC,MAAI;AACvB,SAAO,YAAU;AACb,UAAMC,SAAS,GAAC,YAAS;AACrB,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,6DAAF,CAA1B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,QAAJ,CAAa,2BAAb,CAAN;AACH;;AAED,YAAMC,IAAI,GAAC,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;AAEA,aAAOD,IAAP;AACH,KATD;;AAWA,QAAG;AACC,YAAMA,IAAI,GAAC,MAAML,SAAS,EAA1B;AACAO,MAAAA,QAAQ,CAACT,eAAe,CAACU,WAAhB,CAA4BH,IAA5B,CAAD,CAAR;AACH,KAHD,CAGC,OAAMI,GAAN,EAAU;AACPF,MAAAA,QAAQ,CACJV,eAAe,CAACa,gBAAhB,CAAiC;AAC/BC,QAAAA,MAAM,EAAE,OADuB;AAE/BC,QAAAA,KAAK,EAAE,QAFwB;AAG/BC,QAAAA,OAAO,EAAE;AAHsB,OAAjC,CADI,CAAR;AAQH;AAEJ,GA1BD;AA2BH,CA5BM;AA8BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOR,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNV,eAAe,CAACa,gBAAhB,CAAiC;AAC/BC,MAAAA,MAAM,EAAE,SADuB;AAE/BC,MAAAA,KAAK,EAAE,YAFwB;AAG/BC,MAAAA,OAAO,EAAE;AAHsB,KAAjC,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6DAD0B,EAE1B;AACEe,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACd,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIkB,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAZD;;AAcA,QAAI;AACA,YAAML,WAAW,EAAjB;AACAT,MAAAA,QAAQ,CACJV,eAAe,CAACa,gBAAhB,CAAiC;AAC/BC,QAAAA,MAAM,EAAE,SADuB;AAE/BC,QAAAA,KAAK,EAAE,UAFwB;AAG/BC,QAAAA,OAAO,EAAE;AAHsB,OAAjC,CADI,CAAR;AAOH,KATD,CASE,OAAOS,KAAP,EAAc;AACZf,MAAAA,QAAQ,CACJV,eAAe,CAACa,gBAAhB,CAAiC;AAC/BC,QAAAA,MAAM,EAAE,OADuB;AAE/BC,QAAAA,KAAK,EAAE,QAFwB;AAG/BC,QAAAA,OAAO,EAAE;AAHsB,OAAjC,CADI,CAAR;AASH;AAGF,GA7CD;AA8CD,CA/CI","sourcesContent":["import { showCartActions } from \"./UI\";\r\nimport { cartSliceAction } from \"./cart-slice\";\r\n\r\nexport const fetchData=()=>{\r\n    return async ()=>{\r\n        const fetchCart=async()=>{\r\n            const response=await fetch( \"https://foodapp-c413b-default-rtdb.firebaseio.com/cart.json\");\r\n            if(!response.ok){\r\n                throw new Response(\"unable to fetch the data!\");\r\n            }\r\n\r\n            const data=await response.json();\r\n\r\n            return data;\r\n        }\r\n\r\n        try{\r\n            const data=await fetchCart();\r\n            dispatch(cartSliceAction.replaceCart(data));\r\n        }catch(err){\r\n            dispatch(\r\n                showCartActions.showNotification({\r\n                  status: \"error\",\r\n                  title: \"Error!\",\r\n                  message: \"Fetching Cart Data Failed!\",\r\n                })\r\n              )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n        showCartActions.showNotification({\r\n          status: \"Pending\",\r\n          title: \"Sending...\",\r\n          message: \"Sending Cart Data\",\r\n        })\r\n      );\r\n  \r\n      const sendRequest = async () => {\r\n        const response = await fetch(\r\n          \"https://foodapp-c413b-default-rtdb.firebaseio.com/cart.json\",\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(\"Sending Cart Data failed!\");\r\n        }\r\n      };\r\n  \r\n      try {\r\n          await sendRequest();\r\n          dispatch(\r\n              showCartActions.showNotification({\r\n                status: \"success\",\r\n                title: \"Success!\",\r\n                message: \"Sent Cart Data Successfully!\",\r\n              })\r\n            );\r\n      } catch (error) {\r\n          dispatch(\r\n              showCartActions.showNotification({\r\n                status: \"error\",\r\n                title: \"Error!\",\r\n                message: \"Could not Sent Cart Data Successfully!\",\r\n              })\r\n            )\r\n  \r\n          \r\n      }\r\n  \r\n     \r\n    };\r\n  };"]},"metadata":{},"sourceType":"module"}