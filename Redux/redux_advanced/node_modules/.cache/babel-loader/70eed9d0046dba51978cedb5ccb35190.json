{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst CartSlice = createSlice({\n  name: \"Cart Slice\",\n  initialState: initialCartState,\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const itemExist = state.items.find(item => item.id === newItem.id);\n\n      if (!itemExist) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name\n        });\n      } else {\n        itemExist.quantity++;\n        itemExist.totalPrice = itemExist.totalPrice + newItem.price;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const itemExist = state.items.find(item => item.id === id);\n\n      if (itemExist.quantity === 1) {\n        state.items = state.items.filter(item => item.id != id);\n      } else {\n        itemExist.quantity--;\n        itemExit.totalPrice = itemExit.totalPrice - itemExit.price;\n      }\n    }\n\n  }\n});\nexport default CartSlice;\nexport const cartSliceAction = CartSlice.actions;","map":{"version":3,"sources":["C:/Users/prabe/OneDrive/Desktop/ReactJS/reactJS_intro/Redux/redux_advanced/src/Store/cart-slice.js"],"names":["createSlice","initialCartState","items","totalQuantity","totalAmount","CartSlice","name","initialState","reducers","addToCart","state","action","newItem","payload","itemExist","find","item","id","push","price","quantity","totalPrice","removeFromCart","filter","itemExit","cartSliceAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,aAAa,EAAC,CAFK;AAGnBC,EAAAA,WAAW,EAAC;AAHO,CAAvB;AAMA,MAAMC,SAAS,GAACL,WAAW,CAAC;AACxBM,EAAAA,IAAI,EAAC,YADmB;AAExBC,EAAAA,YAAY,EAACN,gBAFW;AAGxBO,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAOC,MAAP,EAAc;AACnB,YAAMC,OAAO,GAACD,MAAM,CAACE,OAArB;AACA,YAAMC,SAAS,GAACJ,KAAK,CAACR,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAUL,OAAO,CAACK,EAA3C,CAAhB;;AACA,UAAG,CAACH,SAAJ,EAAc;AACVJ,QAAAA,KAAK,CAACR,KAAN,CAAYgB,IAAZ,CACI;AACID,UAAAA,EAAE,EAACL,OAAO,CAACK,EADf;AAEIE,UAAAA,KAAK,EAACP,OAAO,CAACO,KAFlB;AAGIC,UAAAA,QAAQ,EAAC,CAHb;AAIIC,UAAAA,UAAU,EAACT,OAAO,CAACO,KAJvB;AAKIb,UAAAA,IAAI,EAACM,OAAO,CAACN;AALjB,SADJ;AAUH,OAXD,MAWK;AACDQ,QAAAA,SAAS,CAACM,QAAV;AACAN,QAAAA,SAAS,CAACO,UAAV,GAAqBP,SAAS,CAACO,UAAV,GAAqBT,OAAO,CAACO,KAAlD;AACH;AAEJ,KApBI;;AAqBLG,IAAAA,cAAc,CAACZ,KAAD,EAAOC,MAAP,EAAc;AACxB,YAAMM,EAAE,GAACN,MAAM,CAACE,OAAhB;AACA,YAAMC,SAAS,GAACJ,KAAK,CAACR,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAUA,EAAnC,CAAhB;;AACA,UAAGH,SAAS,CAACM,QAAV,KAAqB,CAAxB,EAA0B;AACtBV,QAAAA,KAAK,CAACR,KAAN,GAAYQ,KAAK,CAACR,KAAN,CAAYqB,MAAZ,CAAoBP,IAAD,IAAQA,IAAI,CAACC,EAAL,IAASA,EAApC,CAAZ;AACH,OAFD,MAEK;AACDH,QAAAA,SAAS,CAACM,QAAV;AACAI,QAAAA,QAAQ,CAACH,UAAT,GAAoBG,QAAQ,CAACH,UAAT,GAAoBG,QAAQ,CAACL,KAAjD;AACH;AAIJ;;AAjCI;AAHe,CAAD,CAA3B;AA0CA,eAAed,SAAf;AACA,OAAO,MAAMoB,eAAe,GAACpB,SAAS,CAACqB,OAAhC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState={\r\n    items:[],\r\n    totalQuantity:0,\r\n    totalAmount:0\r\n}\r\n\r\nconst CartSlice=createSlice({\r\n    name:\"Cart Slice\",\r\n    initialState:initialCartState,\r\n    reducers:{\r\n        addToCart(state,action){\r\n            const newItem=action.payload;\r\n            const itemExist=state.items.find((item)=>item.id===newItem.id);\r\n            if(!itemExist){\r\n                state.items.push(\r\n                    {\r\n                        id:newItem.id,\r\n                        price:newItem.price,\r\n                        quantity:1,\r\n                        totalPrice:newItem.price,\r\n                        name:newItem.name\r\n\r\n                    }\r\n                )\r\n            }else{\r\n                itemExist.quantity++;\r\n                itemExist.totalPrice=itemExist.totalPrice+newItem.price;\r\n            }\r\n\r\n        },\r\n        removeFromCart(state,action){\r\n            const id=action.payload;\r\n            const itemExist=state.items.find((item)=>item.id===id);\r\n            if(itemExist.quantity===1){\r\n                state.items=state.items.filter((item)=>item.id!=id);\r\n            }else{\r\n                itemExist.quantity--;\r\n                itemExit.totalPrice=itemExit.totalPrice-itemExit.price;\r\n            }\r\n             \r\n\r\n\r\n        }\r\n    }\r\n    \r\n})\r\n\r\n\r\nexport default CartSlice;\r\nexport const cartSliceAction=CartSlice.actions;"]},"metadata":{},"sourceType":"module"}