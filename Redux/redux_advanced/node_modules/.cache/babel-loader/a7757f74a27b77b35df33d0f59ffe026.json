{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nconst CartSlice = createSlice({\n  name: \"Cart Slice\",\n  initialState: initialCartState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity; // state.items=action.payload.items\n    },\n\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const itemExist = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!itemExist) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        itemExist.quantity++;\n        itemExist.totalPrice = itemExist.totalPrice + newItem.price;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const itemExist = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (itemExist.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        itemExist.quantity--;\n        itemExist.totalPrice = itemExist.totalPrice - itemExist.price;\n      }\n    }\n\n  }\n});\nexport default CartSlice;\nexport const cartSliceAction = CartSlice.actions;","map":{"version":3,"sources":["C:/Users/prabe/OneDrive/Desktop/ReactJS/reactJS_intro/Redux/redux_advanced/src/Store/cart-slice.js"],"names":["createSlice","initialCartState","items","totalQuantity","CartSlice","name","initialState","reducers","replaceCart","state","action","payload","addToCart","newItem","itemExist","find","item","id","push","price","quantity","totalPrice","title","removeFromCart","filter","cartSliceAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,aAAa,EAAE;AAFQ,CAAzB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,YADsB;AAE5BC,EAAAA,YAAY,EAAEL,gBAFc;AAI5BM,EAAAA,QAAQ,EAAE;AAERC,IAAAA,WAAW,CAACC,KAAD,EAAOC,MAAP,EAAc;AACvBD,MAAAA,KAAK,CAACN,aAAN,GAAoBO,MAAM,CAACC,OAAP,CAAeR,aAAnC,CADuB,CAEvB;AAED,KANO;;AAQRS,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,SAAS,GAAGL,KAAK,CAACP,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA/C,CAAlB;AACAR,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAI,CAACW,SAAL,EAAgB;AACdL,QAAAA,KAAK,CAACP,KAAN,CAAYgB,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADG;AAEfE,UAAAA,KAAK,EAAEN,OAAO,CAACM,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAER,OAAO,CAACM,KAJL;AAKfd,UAAAA,IAAI,EAAEQ,OAAO,CAACS;AALC,SAAjB;AAOD,OARD,MAQO;AACLR,QAAAA,SAAS,CAACM,QAAV;AACAN,QAAAA,SAAS,CAACO,UAAV,GAAuBP,SAAS,CAACO,UAAV,GAAuBR,OAAO,CAACM,KAAtD;AACD;AACF,KAxBO;;AAyBRI,IAAAA,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMO,EAAE,GAAGP,MAAM,CAACC,OAAlB;AACA,YAAMG,SAAS,GAAGL,KAAK,CAACP,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAlB;AACAR,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAIW,SAAS,CAACM,QAAV,KAAuB,CAA3B,EAA8B;AAC5BX,QAAAA,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYsB,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLH,QAAAA,SAAS,CAACM,QAAV;AACAN,QAAAA,SAAS,CAACO,UAAV,GAAuBP,SAAS,CAACO,UAAV,GAAuBP,SAAS,CAACK,KAAxD;AACD;AACF;;AAnCO;AAJkB,CAAD,CAA7B;AA6CA,eAAef,SAAf;AACA,OAAO,MAAMqB,eAAe,GAAGrB,SAAS,CAACsB,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n};\r\n\r\nconst CartSlice = createSlice({\r\n  name: \"Cart Slice\",\r\n  initialState: initialCartState,\r\n\r\n  reducers: {\r\n\r\n    replaceCart(state,action){\r\n      state.totalQuantity=action.payload.totalQuantity;\r\n      // state.items=action.payload.items\r\n\r\n    },\r\n\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const itemExist = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!itemExist) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        itemExist.quantity++;\r\n        itemExist.totalPrice = itemExist.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeFromCart(state, action) {\r\n      const id = action.payload;\r\n      const itemExist = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (itemExist.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        itemExist.quantity--;\r\n        itemExist.totalPrice = itemExist.totalPrice - itemExist.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default CartSlice;\r\nexport const cartSliceAction = CartSlice.actions;\r\n"]},"metadata":{},"sourceType":"module"}