{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prabe\\\\OneDrive\\\\Desktop\\\\ReactJS\\\\reactJS_intro\\\\ReactJS_Advanced\\\\useReducer\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth_context';\nimport InputForm from '../Input/input'; //! Email Reducer for the Email Input\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n}; //! Password Reducer for the Password Input\n\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASS\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  _s();\n\n  const authContext = useContext(AuthContext); // const [enteredPassword, setEnteredPassword] = useState('');\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_PASS',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authContext.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(InputForm, {\n        isValid: emailIsValid,\n        htmlFor: \"email\",\n        content: \"E-mail\",\n        type: \"email\",\n        value: emailState.value,\n        changeHandler: emailChangeHandler,\n        validatehandler: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        isValid: passIsValid,\n        htmlFor: \"password\",\n        content: \"Password\",\n        type: \"password\",\n        value: passwordState.value,\n        changeHandler: passwordChangeHandler,\n        validatehandler: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"vCAaqzANMyAI0vgPl9ZUYFWqyUY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/prabe/OneDrive/Desktop/ReactJS/reactJS_intro/ReactJS_Advanced/useReducer/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","InputForm","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","authContext","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailIsValid","passIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useReducer,useContext ,useRef} from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\nimport AuthContext from '../../store/auth_context';\r\nimport InputForm from '../Input/input';\r\n\r\n//! Email Reducer for the Email Input\r\nconst emailReducer=(state,action)=>{\r\n  if(action.type===\"USER_INPUT\"){\r\n    return {value:action.val,isValid:action.val.includes('@')};\r\n  }\r\n\r\n  if(action.type===\"INPUT_BLUR\"){\r\n    return {value:state.value,isValid:state.value.includes('@')};\r\n  }\r\n\r\n  return{value:'',isValid:false};\r\n  \r\n}\r\n\r\n//! Password Reducer for the Password Input\r\nconst passwordReducer=(state,action)=>{\r\n  if(action.type===\"USER_PASS\"){\r\n    return {value:action.val,isValid:action.val.trim().length>6};\r\n  }\r\n  if(action.type===\"INPUT_BLUR\"){\r\n    return {value:state.value,isValid:state.value.trim().length>6};\r\n  }\r\n  return {value:'',isValid:false};\r\n\r\n}\r\nconst Login = () => {\r\n  const authContext=useContext(AuthContext);\r\n\r\n  // const [enteredPassword, setEnteredPassword] = useState('');\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [emailState,dispatchEmail]=useReducer(emailReducer,{\r\n    value:'',\r\n    isValid:null\r\n  },);\r\n\r\n  const [passwordState,dispatchPassword]=useReducer(passwordReducer,{\r\n    value:'',\r\n  isValid:null});\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('EFFECT RUNNING');\r\n\r\n    return () => {\r\n      console.log('EFFECT CLEANUP');\r\n    };\r\n  }, []);\r\n\r\n  const{isValid:emailIsValid}=emailState;\r\n  const {isValid:passIsValid}=passwordState;\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      console.log('Checking form validity!');\r\n      setFormIsValid(\r\n       emailIsValid && passIsValid\r\n      );\r\n    }, 500);\r\n\r\n    return () => {\r\n      console.log('CLEANUP');\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [emailIsValid, passIsValid]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({type:'USER_INPUT',val:event.target.value});\r\n\r\n    setFormIsValid(\r\n      emailState.isValid && passwordState.isValid\r\n    );\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({type:'USER_PASS',val:event.target.value});\r\n\r\n    setFormIsValid(\r\n      emailState.isValid && passwordState.isValid\r\n    );\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    dispatchEmail({type:'INPUT_BLUR'});\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchPassword({type:'INPUT_BLUR'});\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if(formIsValid){\r\n      authContext.onLogin(emailState.value, passwordState.value);\r\n    }else if(!emailIsValid){\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n\r\n        <InputForm  isValid={emailIsValid}\r\n         htmlFor=\"email\" \r\n        content=\"E-mail\"\r\n         type=\"email\" \r\n        value={emailState.value} \r\n        changeHandler={emailChangeHandler} \r\n        validatehandler={validateEmailHandler}/>\r\n\r\n        <InputForm  isValid={passIsValid}\r\n         htmlFor=\"password\" \r\n        content=\"Password\"\r\n         type=\"password\" \r\n        value={passwordState.value} \r\n        changeHandler={passwordChangeHandler} \r\n        validatehandler={validatePasswordHandler}/>\r\n        \r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} >\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}